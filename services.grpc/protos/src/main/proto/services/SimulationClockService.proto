/*
 * P-logi-K. A Kotlin(TM)-based PLC simulation.
 * Copyright (C)  2022.  Markus Keppeler
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation version 2.1.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301
 * USA
 */

syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.github.mkep_dev.p_logi_k.services.grpc.stub";
option java_outer_classname = "SimulationClockServiceProto";

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

package services;

service SimulationClockService {
  rpc getTickDelta (google.protobuf.Empty) returns (google.protobuf.Int32Value) {};
  rpc setSimAcceleration (google.protobuf.DoubleValue) returns (google.protobuf.BoolValue) {};
  rpc getSimAcceleration (google.protobuf.Empty) returns (google.protobuf.DoubleValue) {};
  rpc setAutoTicking (google.protobuf.BoolValue) returns (google.protobuf.Empty) {};
  rpc doTick (google.protobuf.Empty) returns (google.protobuf.BoolValue) {};
  rpc getMillis (google.protobuf.Empty) returns (google.protobuf.Int64Value) {};
}